name: Run Code Tests

on:
  push:
    paths:
      - "solutions/**"
  pull_request:
    paths:
      - "tests/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect Changed Files
        id: changed-files
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"
          if [ -z "$BEFORE_COMMIT" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-parse HEAD~1)
          fi
          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD | grep '^solutions/')
          echo "CHANGED_FILES=$(echo $CHANGED_FILES | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Check for Empty Implementations
        run: |
          INCOMPLETE=""
          for file in $CHANGED_FILES; do
            echo "Checking file: $file"
            if [[ "$file" == *.c || "$file" == *.cpp ]]; then
              CODE=$(grep -vE '^\s*(//|/\*|\*/|\*|$)' "$file" | grep -E '[{};]')
              if [ $(echo "$CODE" | wc -l) -le 2 ]; then
                INCOMPLETE="$INCOMPLETE $file"
              fi
            elif [[ "$file" == *.py ]]; then
              CODE=$(grep -vE '^\s*(#|$)' "$file" | grep -E '[a-zA-Z0-9]')
              if [ $(echo "$CODE" | wc -l) -le 2 ]; then
                INCOMPLETE="$INCOMPLETE $file"
              fi
            elif [[ "$file" == *.java ]]; then
              CODE=$(grep -vE '^\s*(//|/\*|\*/|\*|$)' "$file" | grep -E '[{};]')
              if [ $(echo "$CODE" | wc -l) -le 2 ]; then
                INCOMPLETE="$INCOMPLETE $file"
              fi
            fi
          done
          if [ -n "$INCOMPLETE" ]; then
            echo "Incomplete implementations found in: $INCOMPLETE"
            exit 1
          fi

      - name: Determine Language
        run: |
          LANGS=""
          for file in $CHANGED_FILES; do
            case "$file" in
              *.c) LANGS+="C " ;;
              *.cpp) LANGS+="C++ " ;;
              *.py) LANGS+="Python " ;;
              *.java) LANGS+="Java " ;;
            esac
          done
          echo "LANGUAGE=$(echo $LANGS | xargs | sort -u)" >> $GITHUB_ENV

      - name: Update Package Lists
        if: contains(env.LANGUAGE, 'C') || contains(env.LANGUAGE, 'C++') || contains(env.LANGUAGE, 'Python') || contains(env.LANGUAGE, 'Java')
        run: sudo apt update

      - name: Install C Dependencies
        if: contains(env.LANGUAGE, 'C')
        run: sudo apt install -y gcc

      - name: Install C++ Dependencies
        if: contains(env.LANGUAGE, 'C++')
        run: sudo apt install -y g++

      - name: Install Python Dependencies
        if: contains(env.LANGUAGE, 'Python')
        run: sudo apt install -y python3

      - name: Install Java Dependencies
        if: contains(env.LANGUAGE, 'Java')
        run: sudo apt install -y openjdk-17-jdk-headless

      - name: Run C Tests
        if: contains(env.LANGUAGE, 'C')
        run: |
          gcc tests/test.c solutions/solution.c -o runner && ./runner

      - name: Run C++ Tests
        if: contains(env.LANGUAGE, 'C++')
        run: |
          g++ tests/test.cpp solutions/solution.cpp -o runner && ./runner

      - name: Run Python Tests
        if: contains(env.LANGUAGE, 'Python')
        run: python3 tests/test.py

      - name: Run Java Tests
        if: contains(env.LANGUAGE, 'Java')
        run: |
          javac tests/TestCases.java solutions/Solution.java
          java -cp tests TestCases
